{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAA0C;;AAE1C;;AAEA,SAAS,8EAA8E;;AAEvF,sBAAsB,yBAAyB,IAAI,aAAa;AAChE;;AAEA;AACA;AACA,uCAAuC,MAAM;AAC7C,uCAAuC,OAAO;AAC9C;AACA,0CAA0C,KAAK;AAC/C,8CAA8C,0BAA0B;AACxE,2CAA2C,SAAS;AACpD;AACA,oBAAoB,IAAI;AACxB,4CAA4C,2EAA2E;AACvH,yCAAyC,iBAAiB;AAC1D;AACA,sGAAsG,wEAAwE;AAC9K,qGAAqG,uEAAuE;AAC5K,8FAA8F,uEAAuE;AACrK;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,wDAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClD0C;;AAE1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,wDAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClC0C;;AAE1C;AACA;AACA,SAAS,aAAa;AACtB;AACA,yDAAyD,gDAAgD,IAAI,MAAM,EAAE,2DAA2D,MAAM,cAAc;AACpM;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,wDAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/C0C;;AAEnC;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,wDAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjCA;AAC0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,wDAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/B0C;;AAE1C;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,wDAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3B0C;;AAE1C;AACA;AACA,2CAA2C,uCAAuC,IAAI,KAAK;AAC3F;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,wDAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzC0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,wDAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7B0C;;AAE1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,wDAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChCO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;;;;;;;;;;;;;;;;;ACrBsC;AACA;AAC7C;AACA;AACA,SAAS,6DAAmB,4BAA4B,oEAA0B;AAClF;AACA;AACA;AACA,SAAS,2DAAiB,4BAA4B,kEAAwB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,yEAA+B;AAC7C;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oEAA0B;AAC1E;AACA,kBAAkB,kBAAkB;AACpC,sBAAsB,6DAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,sEAA4B;AAC7E;AACA,kBAAkB,mBAAmB;AACrC,wBAAwB,+DAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,qEAA2B;AAC3E;AACA,kBAAkB,kBAAkB;AACpC,uBAAuB,8DAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,8DAAoB,4BAA4B,qEAA2B;AACzF,eAAe,+DAAqB,4BAA4B,sEAA4B;AAC5F;AACA,eAAe,+DAAqB,4BAA4B,sEAA4B;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAqB,4BAA4B,sEAA4B;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AAC4C;;;;;;;;;;;;;;;ACtH5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACyB;;;;;;;;;;;;;;;ACXzB;AACA;AACA;AACA;AACsB;;;;;;;;;;;;;;;;ACJtB;AACO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCnBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;ACN+B;AAC0B;AACuB;AAC1B;AACe;AACN;AACO;AACa;AACI;AAC3B;AACK;AAChB;AAC4B;AAC7E,WAAW,oBAAoB;AAC/B,WAAW,gBAAgB;;AAE3B;AACA;AACA;AACA;;AAEA,8CAAM,wBAAwB,oEAAiB;AAC/C;AACA,8CAAM,oBAAoB,2FAA4B,CAAC,iFAAe;AACtE,8CAAM,oBAAoB,iEAAgB,CAAC,6DAAY;;AAEvD;;AAEA,8CAAM,oBAAoB,gFAAuB;;AAEjD;AACA,qFAAqF;;AAErF;AACA;AACA;;AAEA,cAAc,wEAAa;;AAE3B;AACA,EAAE,8CAAM,4BAA4B,0EAAoB;AACxD,CAAC;;AAED;AACA,8CAAM,4BAA4B,iFAAuB;AACzD;AACA;;AAEA;AACA;AACA;AACA,IAAI,8CAAM,4BAA4B,0EAAoB;AAC1D,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,8CAAM,qBAAqB,8FAA0B;AACrD,wFAAwF;;AAExF,gBAAgB,OAAO;AACvB,EAAE,8CAAM,wBAAwB,0EAAoB,CAAC,8EAAmB;AACxE;;AAEA;AACA,8CAAM,qBAAqB,kGAAoC;AAC/D;;AAEA,gBAAgB,OAAO;AACvB,EAAE,8CAAM,kCAAkC,0EAAoB,CAAC,8EAAmB;AAClF;;AAEA;AACA;;AAEA,8CAAM,sBAAsB,uEAAmB;;AAE/C;AACA","sources":["webpack://cinema/./src/components/film-article.js","webpack://cinema/./src/components/films-container.js","webpack://cinema/./src/components/filter-and-statistics.js","webpack://cinema/./src/components/most-commended-films.js","webpack://cinema/./src/components/rank-user.js","webpack://cinema/./src/components/show-more-button.js","webpack://cinema/./src/components/sorting.js","webpack://cinema/./src/components/statistics.js","webpack://cinema/./src/components/top-reated-films-container.js","webpack://cinema/./src/const/const.js","webpack://cinema/./src/mock/film-articles-mock.js","webpack://cinema/./src/mock/filter-and-statistics-mok.js","webpack://cinema/./src/mock/sorting-mock.js","webpack://cinema/./src/utils.js","webpack://cinema/webpack/bootstrap","webpack://cinema/webpack/runtime/define property getters","webpack://cinema/webpack/runtime/hasOwnProperty shorthand","webpack://cinema/webpack/runtime/make namespace object","webpack://cinema/./src/main.js"],"sourcesContent":["import {createNewElement} from \"../utils\";\n\nconst createFilmArticle = (filmArticle) => {\n\n  const {title, rating, year, runTime, genre, img, description, comments, userDetails} = filmArticle;\n\n  const duration = `${Math.floor(runTime / 60)}h ${runTime % 60}m`;\n  const releaseDate = new Date(Date.parse(filmArticle.releaseDate));\n\n  return (\n    `<article class=\"film-card\">\n        <h3 class=\"film-card__title\">${title}</h3>\n        <p class=\"film-card__rating\">${rating}</p>\n        <p class=\"film-card__info\">\n          <span class=\"film-card__year\">${year}</span>\n          <span class=\"film-card__duration\">${releaseDate.getFullYear()}</span>\n          <span class=\"film-card__genre\">${genre[0]}</span>\n        </p>\n        <img src=\"${img}\" alt=\"\" class=\"film-card__poster\">\n        <p class=\"film-card__description\">${description.length > 139 ? description.slice(1, 139) + `...` : description}</p>\n        <a class=\"film-card__comments\">${comments.length} comments</a>\n        <form class=\"film-card__controls\">\n          <button class=\"film-card__controls-item button film-card__controls-item--add-to-watchlist ${userDetails.isWatchlistActive ? `film-card__controls-item--active` : ``}\">Add to watchlist</button>\n          <button class=\"film-card__controls-item button film-card__controls-item--mark-as-watched ${userDetails.isWatchedtActive ? `film-card__controls-item--active` : ``}\">Mark as watched</button>\n          <button class=\"film-card__controls-item button film-card__controls-item--favorite ${userDetails.isFavoriteActive ? `film-card__controls-item--active` : ``}\">Mark as favorite</button>\n        </form>\n      </article>`\n  );\n};\n\nexport class FilmArticleComponent {\n  constructor(filmArticle) {\n    this._article = filmArticle;\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createFilmArticle(this._article);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createNewElement(this.getTemplate());\n    }\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createNewElement} from \"../utils\";\n\nconst createFilmsContainer = () => {\n  return (\n    `<section class=\"films\">\n    <section class=\"films-list\">\n      <h2 class=\"films-list__title visually-hidden\">All movies. Upcoming</h2>\n\n      <div class=\"films-list__container\">\n      </div>\n      </section>`\n  );\n};\n\nexport class FilmsContainerComponent {\n  constructor() {\n    this._containerTemplate = null;\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createFilmsContainer();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createNewElement(this.getTemplate());\n    }\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createNewElement} from '../utils';\n\n// создаем шаблон одного пункта меню\nconst filterItem = (filter, isActive) => {\n  const {name, count} = filter;\n  return (\n    `<a href=\"#watchlist\" class=\"main-navigation__item ${isActive ? `main-navigation__item--active` : ``}\">${name} ${count !== 0 ? `<span class=\"main-navigation__item-count\">${count}</span>` : ``}</a>`\n  );\n};\n\n// создаем шаблон элемента \"Меню (фильтры и статистика)\"\nconst createFilterAndStatistics = (filters) => {\n  const textData = filters.map((item, index) => {\n    return filterItem(item, index === 0);\n  }).join(`\\n`);\n\n  return (\n    `<nav class=\"main-navigation\">\n        <div class=\"main-navigation__items\">\n          ${textData}\n        </div>\n        <a href=\"#stats\" class=\"main-navigation__additional\">Stats</a>\n\n      </nav>`\n  );\n};\n\nexport class FilterAndStatisticsComponent {\n  constructor(filters) {\n    this._filters = filters;\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createFilterAndStatistics(this._filters);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createNewElement(this.getTemplate());\n    }\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n\n","import {createNewElement} from '../utils';\n\nexport const createMostCommendedFilmsContainer = () => {\n  return (\n    `<section class=\"films-list--extra\">\n    <h2 id=\"ass1\" class=\"films-list__title\" >Most commented</h2>\n\n    <div class=\"films-list__container\" id='mostCommentedFilmsContainer' >\n    </div>\n    </section>`\n\n  );\n};\n\nexport class MostCommendedFilmsContainerComponent {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createMostCommendedFilmsContainer();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createNewElement(this.getTemplate());\n    }\n    return this._element\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","// создаем шаблон элемента \"Звание пользователя\"\nimport {createNewElement} from '../utils';\n\nconst createRankUser = () => {\n  return (\n    `<section class=\"header__profile profile\">\n    <p class=\"profile__rating\">Movie Buff</p>\n    <img class=\"profile__avatar\" src=\"images/bitmap@2x.png\" alt=\"Avatar\" width=\"35\" height=\"35\">\n  </section>`\n  );\n};\n\nexport class RankUserComponent {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createRankUser();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createNewElement(this.getTemplate());\n    }\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createNewElement} from '../utils';\n\nconst createShowMoreButton = () => {\n  return (\n    `<button class=\"films-list__show-more\">Show more</button>`\n  );\n};\n\nexport class ShowMoreButtonComponent {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createShowMoreButton();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createNewElement(this.getTemplate());\n    }\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createNewElement} from '../utils';\n\nconst sortItem = (name, isActive) => {\n  return (\n    `<li><a href=\"#\" class=\"sort__button ${isActive ? `sort__button--active` : ``}\">${name}</a></li>\n    `\n  );\n};\n\nconst createSorting = (data) => {\n  const dataSort = data.map((item, index) => {\n    return sortItem(item, index === 0);\n  }).join(`\\n`);\n\n  return (\n    `<ul class=\"sort\">\n        ${dataSort}\n      </ul>`\n  );\n};\n\nexport class SortingComponent {\n  constructor(data) {\n    this._data = data;\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createSorting(this._data);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createNewElement(this.getTemplate());\n    }\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createNewElement} from \"../utils\";\n\nconst createStatistics = () => {\n  return (\n    `<section class=\"footer__statistics\">\n    <p>130 291 movies inside</p>\n  </section>`\n  );\n};\n\nexport class StatisticsComponent {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createStatistics();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createNewElement(this.getTemplate());\n    }\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createNewElement} from \"../utils\";\n\nconst createTopFilmsContainer = () => {\n  return (\n    `<section class=\"films-list--extra\">\n    <h2 class=\"films-list__title\">Top rated</h2>\n\n    <div class=\"films-list__container\">\n    </div>\n    </section>`\n  );\n};\n\nexport class TopFilmsContainerComponent {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createTopFilmsContainer();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createNewElement(this.getTemplate());\n    }\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","export const FILM_ARTICLES = {\r\n  title: [`one`, `two`, `three`, `four`, `five`, `six`],\r\n  img: [`made-for-each-other.png`, `popeye-meets-sinbad.png`, `sagebrush-trail.jpg`, `santa-claus-conquers-the-martians.jpg`, `the-dance-of-life.jpg`, `the-great-flamarion.jpg`, `the-man-with-the-golden-arm.jpg`],\r\n  description: `Lorem ipsum dolor sit amet,  consectetur adipiscing elit. Cras aliquet  varius magna, non porta ligula feugiat\r\n  eget. Fusce tristique felis at fermentum  pharetra. Aliquam id orci ut lectus varius  viverra. Nullam nunc ex, convallis sed\r\n  finibus eget, sollicitudin eget ante.  Phasellus eros mauris, condimentum sed\r\n  nibh vitae, sodales efficitur ipsum. Sed  blandit, eros vel aliquam faucibus, purus  ex euismod diam, eu luctus nunc ante ut  dui. Sed sed nisi sed augue convallis  suscipit in sed felis. Aliquam erat  volutpat. Nunc fermentum tortor ac porta  dapibus. In rutrum ac purus sit amet tempus.`,\r\n  genre: [`comedy`, `fighting`, `horror`, `drama`, `musical`],\r\n  writers: [`Din Kuntz`, `Pehov`, `Joe Abercrombi`, `Patrik Ruffus`, `Erixon`],\r\n  actors: [`Lui De Fines`, `Charli Chaplin`, `Janifer Aniston`, `Big Ban`],\r\n  country: [`Russia`, `USA`, `India`],\r\n\r\n};\r\n\r\nexport const FILM_COMMENTS = {\r\n  arthor: [`Max`, `Illia`, `John Snow`, `Lady Gaga`, `Brad Pitt`, `Ass Hole`],\r\n  comment: [`good Film!`, `Amazing Film!`, `Not good film`, `Boooooooriiiing!!!`, `it's terrible! I have pised my shorts!`, `It's very funny!`, `its very dramatic!`],\r\n  emotion: [`smile`, `sleeping`, `puke`, `angry`],\r\n  date: `2019-05-11T16:12:32.554Z`,\r\n};\r\n\r\nexport const MONTH = [`January`, `February`, `Marth`, `April`, `May`, `June`, `July`, `August`, `September`, `November`, `December`];\r\n","import {FILM_ARTICLES} from \"../const/const\";\r\nimport {FILM_COMMENTS} from \"../const/const\";\r\n\r\nconst generateTitle = () => {\r\n  return FILM_ARTICLES.title[Math.floor(Math.random() * FILM_ARTICLES.title.length)];\r\n};\r\n\r\nconst generateImg = () => {\r\n  return FILM_ARTICLES.img[Math.floor(Math.random() * FILM_ARTICLES.img.length)];\r\n};\r\n\r\n// const arr = FILM_ARTICLES.description.split('.');\r\n// console.log(FILM_ARTICLES.description.split(`.`));\r\n\r\nconst generateDescription = () => {\r\n  const arr = FILM_ARTICLES.description.split(`.`);\r\n  const setArr = new Set();\r\n  for (let i = 0; i < 5; i++) {\r\n    setArr.add(arr[Math.floor(Math.random() * arr.length)]);\r\n  }\r\n  return Array.from(setArr).join(`. `);\r\n};\r\n\r\nconst generateRating = () => {\r\n  return (Math.random() * 10).toFixed(1);\r\n};\r\n\r\nconst generateYear = () => {\r\n  return 1972 + Math.floor(Math.random() * 50);\r\n};\r\n\r\nconst generateGenre = () => {\r\n  let numberGenres = Math.floor(Math.random() * FILM_ARTICLES.genre.length) + 1;\r\n  const genres = [];\r\n  for (let i = 0; i < numberGenres; i++) {\r\n    let addingGenre = FILM_ARTICLES.genre[Math.floor(Math.random() * numberGenres)];\r\n    if (!genres.includes(addingGenre)) {\r\n      genres.push(addingGenre);\r\n    }\r\n  }\r\n  return genres;\r\n};\r\n\r\nconst generateWriters = () => {\r\n  let numberWriters = Math.floor(Math.random() * FILM_ARTICLES.writers.length) + 1;\r\n  const writers = [];\r\n  for (let i = 0; i < numberWriters; i++) {\r\n    let addingWriters = FILM_ARTICLES.writers[Math.floor(Math.random() * numberWriters)];\r\n    if (!writers.includes(addingWriters)) {\r\n      writers.push(addingWriters);\r\n    }\r\n  }\r\n  return writers;\r\n};\r\n\r\nconst generateActors = () => {\r\n  let numberActors = Math.floor(Math.random() * FILM_ARTICLES.actors.length) + 1;\r\n  const actors = [];\r\n  for (let i = 0; i < numberActors; i++) {\r\n    let addingActors = FILM_ARTICLES.actors[Math.floor(Math.random() * numberActors)];\r\n    if (!actors.includes(addingActors)) {\r\n      actors.push(addingActors);\r\n    }\r\n  }\r\n  return actors;\r\n};\r\n\r\nconst filmArticleCommentMock = () => {\r\n  return {\r\n    'id': Math.floor(Math.random() * 500),\r\n    'author': FILM_COMMENTS.arthor[Math.floor(Math.random() * FILM_COMMENTS.arthor.length)],\r\n    \"comment\": FILM_COMMENTS.comment[Math.floor(Math.random() * FILM_COMMENTS.comment.length)],\r\n    'date': `2019-05-11T16:12:32.554Z`,\r\n    \"emotion\": FILM_COMMENTS.emotion[Math.floor(Math.random() * FILM_COMMENTS.emotion.length)],\r\n  };\r\n};\r\n\r\nconst generateComments = () => {\r\n  return new Array(Math.floor(Math.random() * 5) + 1).fill(``).map(() => {\r\n    return filmArticleCommentMock();\r\n  });\r\n};\r\n\r\nconst filmArticleDataMock = () => {\r\n  return {\r\n    'id': Math.floor(Math.random() * 500),\r\n    'title': generateTitle(),\r\n    'rating': `${generateRating()}`,\r\n    'year': generateYear(),\r\n    'releaseDate': `2019-05-11T00:00:00.000Z`,\r\n    'runTime': 135,\r\n    'genre': generateGenre(),\r\n    'img': `./images/posters/${generateImg()}`,\r\n    'description': `${generateDescription()}`,\r\n    'comments': generateComments(),\r\n    \"alternativeTitle\": `alternative_title`,\r\n    \"ageRating\": Math.floor(Math.random() * 17) + 1,\r\n    \"director\": `James Cameron`,\r\n    \"writers\": generateWriters(),\r\n    \"actors\": generateActors(),\r\n    \"country\": FILM_ARTICLES.country[Math.floor(Math.random() * FILM_ARTICLES.country.length)],\r\n    \"userDetails\": {\r\n      'isWatchlistActive': Math.random() > 0.5,\r\n      'isWatchedtActive': Math.random() > 0.5,\r\n      'isFavoriteActive': Math.random() > 0.5,\r\n      'watchingDate': `2019-04-12T16:12:32.554Z`\r\n    }\r\n\r\n  };\r\n};\r\n\r\n\r\nconst generateFilms = (count) => {\r\n  return new Array(count).fill(``).map(() => {\r\n    return filmArticleDataMock();\r\n  });\r\n};\r\n\r\nexport {filmArticleDataMock, generateFilms};\r\n","const filterNames = [`All movies`, `Watchlist`, `History`, `Favorites`];\r\n\r\nconst filtersDataMock = () => {\r\n  return filterNames.map((item, index) => {\r\n    return {\r\n      name: item,\r\n      count: index === 0 ? 0 : Math.floor(Math.random() * 100)\r\n    };\r\n  });\r\n};\r\n\r\nexport {filtersDataMock};\r\n","const sortDataMock = [`Sort by default`, `\r\nSort by date`, `\r\nSort by rating`];\r\n\r\nexport {sortDataMock};\r\n","// создаем полноценный ДОМ-элемент из строки\nexport const createNewElement = (templateString) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = templateString;\n  return newElement.firstChild;\n};\n\nexport const render = (container, element, place = `beforeend`) => {\n  switch (place) {\n    case `beforeend`:\n      container.append(element);\n      break;\n    case `afterbegin`:\n      container.prepend(element);\n      break;\n    case `afterend`:\n      container.after(element);\n      break;\n  }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {render} from './utils';\nimport {RankUserComponent} from './components/rank-user';\nimport {FilterAndStatisticsComponent} from './components/filter-and-statistics';\nimport {SortingComponent} from './components/sorting';\nimport {FilmsContainerComponent} from './components/films-container';\nimport {FilmArticleComponent} from './components/film-article';\nimport {ShowMoreButtonComponent} from './components/show-more-button';\nimport {TopFilmsContainerComponent} from './components/top-reated-films-container';\nimport {MostCommendedFilmsContainerComponent} from './components/most-commended-films';\nimport {StatisticsComponent} from './components/statistics';\nimport {filtersDataMock} from './mock/filter-and-statistics-mok';\nimport {sortDataMock} from './mock/sorting-mock';\nimport {filmArticleDataMock, generateFilms} from './mock/film-articles-mock';\n// import {UserStatsComponent} from './components/user-stats';\n// import {PopupComponent} from './components/popup/popup';\n\n// основные элементы для вставки контента\nconst rankUserContainer = document.querySelector(`.header`);\nconst mainContainer = document.querySelector(`.main`);\nconst footerContainer = document.querySelector(`.footer`);\n\nrender(rankUserContainer, new RankUserComponent().getElement());\n// addElement(mainContainer, createFilterAndStatistics(filtersDataMock()), `afterbegin`);\nrender(mainContainer, new FilterAndStatisticsComponent(filtersDataMock()).getElement());\nrender(mainContainer, new SortingComponent(sortDataMock).getElement());\n\n// контейнер для секции \"фильмы\"\n\nrender(mainContainer, new FilmsContainerComponent().getElement());\n\nconst filmsContainer = mainContainer.querySelector(`.films`);\nconst articleFilmsContainer = mainContainer.querySelector(`.films-list__container`); // добавляем контейнер непосредственно для карточек фильмов\n\nconst TOTAL_FILMS = 20;\nconst SHOWN_FILMS = 5;\nconst ADD_FILMS = 5;\n\nconst films = generateFilms(TOTAL_FILMS);\n\nfilms.slice(0, SHOWN_FILMS).forEach((item) => {\n  render(articleFilmsContainer, new FilmArticleComponent(item).getElement());\n});\n\n// добавляем кнопку \"показать больше фильмов\"\nrender(articleFilmsContainer, new ShowMoreButtonComponent().getElement(), `afterend`);\nconst moreButton = mainContainer.querySelector(`.films-list__show-more`);\nlet prevFilms = SHOWN_FILMS;\n\nmoreButton.addEventListener(`click`, () => {\n  let currentFilms = prevFilms + ADD_FILMS;\n  films.slice(prevFilms, currentFilms).forEach((item) => {\n    render(articleFilmsContainer, new FilmArticleComponent(item).getElement());\n  });\n  prevFilms = currentFilms;\n  if (currentFilms >= TOTAL_FILMS) {\n    moreButton.remove();\n  }\n});\n\n// добавляем топ-рейтинг фильмы\nrender(filmsContainer, new TopFilmsContainerComponent().getElement());\nconst topFilmsContainer = mainContainer.querySelectorAll(`.films-list__container`)[1];  // лучше через айдишник - тут чисто для разминки\n\nfor (let i = 0; i < 2; i++) {\n  render(topFilmsContainer, new FilmArticleComponent(filmArticleDataMock()).getElement());\n}\n\n// добавляем самые комментируемые фильмы\nrender(filmsContainer, new MostCommendedFilmsContainerComponent().getElement());\nconst mostCommentedFilmsContainer = document.querySelector(`#mostCommentedFilmsContainer`);\n\nfor (let i = 0; i < 2; i++) {\n  render(mostCommentedFilmsContainer, new FilmArticleComponent(filmArticleDataMock()).getElement());\n}\n\n// добавление статистики пользователя по необходимости\n// render(mainContainer, new UserStatsComponent().getElement());\n\nrender(footerContainer, new StatisticsComponent().getElement());\n\n// добавление попапа по необходимости\n//render(footerContainer, new PopupComponent(films[0]).getElement(), `afterend`);\n\n"],"names":[],"sourceRoot":""}