{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLO;AACP;AACA,SAAS,8EAA8E;AACvF;AACA,sBAAsB,yBAAyB,IAAI,aAAa;AAChE;AACA;AACA;AACA;AACA,uCAAuC,MAAM;AAC7C,uCAAuC,OAAO;AAC9C;AACA,0CAA0C,KAAK;AAC/C,8CAA8C,0BAA0B;AACxE,2CAA2C,SAAS;AACpD;AACA,oBAAoB,IAAI;AACxB,4CAA4C,2EAA2E;AACvH,yCAAyC,iBAAiB;AAC1D;AACA,sGAAsG,wEAAwE;AAC9K,qGAAqG,uEAAuE;AAC5K,8FAA8F,uEAAuE;AACrK;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1BA;AACA;AACA,SAAS,aAAa;AACtB;AACA,yDAAyD,gDAAgD,IAAI,MAAM,EAAE,2DAA2D,MAAM,cAAc;AACpM;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzBA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;ACJA;AACA;AACA,2CAA2C,uCAAuC,IAAI,KAAK;AAC3F;AACA;AACA;AACA;AACO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;;;;;;;;;;;;;;ACjBO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACNO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;;;;;;;;;;;;;;;;;ACrBsC;AACA;AAC7C;AACA;AACA,SAAS,6DAAmB,4BAA4B,oEAA0B;AAClF;AACA;AACA;AACA,SAAS,2DAAiB,4BAA4B,kEAAwB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,yEAA+B;AAC7C;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oEAA0B;AAC1E;AACA,kBAAkB,kBAAkB;AACpC,sBAAsB,6DAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,sEAA4B;AAC7E;AACA,kBAAkB,mBAAmB;AACrC,wBAAwB,+DAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,qEAA2B;AAC3E;AACA,kBAAkB,kBAAkB;AACpC,uBAAuB,8DAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,8DAAoB,4BAA4B,qEAA2B;AACzF,eAAe,+DAAqB,4BAA4B,sEAA4B;AAC5F;AACA,eAAe,+DAAqB,4BAA4B,sEAA4B;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAqB,4BAA4B,sEAA4B;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AAC4C;;;;;;;;;;;;;;;ACtH5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACyB;;;;;;;;;;;;;;;ACXzB;AACA;AACA;AACA;AACsB;;;;;;;UCJtB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;ACN0C;AACY;AACuB;AAC1B;AACS;AACO;AACV;AACQ;AAChB;AAC4B;AAC7E,YAAY,kBAAkB;AAC9B,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAU,oBAAoB,qEAAc;AAC5C,yDAAU,gBAAgB,4FAAyB,CAAC,gFAAe;AACnE,yDAAU,gBAAgB,kEAAa,CAAC,4DAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA;AACA;AACA;AACA;AACA,cAAc,uEAAa;AAC3B;AACA;AACA,EAAE,yDAAU,wBAAwB,2EAAiB;AACrD,CAAC;AACD;AACA;AACA,yDAAU,wBAAwB,kFAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,yDAAU,wBAAwB,2EAAiB;AACvD,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,EAAE,yDAAU,uBAAuB,2EAAiB,CAAC,6EAAmB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,EAAE,yDAAU,6BAA6B,2EAAiB,CAAC,6EAAmB;AAC9E;AACA;AACA;AACA;AACA;AACA,yDAAU,kBAAkB,wEAAgB;AAC5C;AACA;AACA","sources":["webpack://cinema/./src/add-elements.js","webpack://cinema/./src/components/film-article.js","webpack://cinema/./src/components/filter-and-statistics.js","webpack://cinema/./src/components/rank-user.js","webpack://cinema/./src/components/show-more-button.js","webpack://cinema/./src/components/sorting.js","webpack://cinema/./src/components/statistics.js","webpack://cinema/./src/const/const.js","webpack://cinema/./src/mock/film-articles-mock.js","webpack://cinema/./src/mock/filter-and-statistics-mok.js","webpack://cinema/./src/mock/sorting-mock.js","webpack://cinema/webpack/bootstrap","webpack://cinema/webpack/runtime/define property getters","webpack://cinema/webpack/runtime/hasOwnProperty shorthand","webpack://cinema/webpack/runtime/make namespace object","webpack://cinema/./src/main.js"],"sourcesContent":["// универсальная функция по добавлению элементов в вёрстку\r\nexport const addElement = function (container, element, where = `beforeend`) {\r\n  container.insertAdjacentHTML(where, element);\r\n};\r\n\r\n\r\n","export const createFilmArticle = (filmArticle) => {\r\n\r\n  const {title, rating, year, runTime, genre, img, description, comments, userDetails} = filmArticle;\r\n\r\n  const duration = `${Math.floor(runTime / 60)}h ${runTime % 60}m`;\r\n  const releaseDate = new Date(Date.parse(filmArticle.releaseDate));\r\n\r\n  return (\r\n    `<article class=\"film-card\">\r\n        <h3 class=\"film-card__title\">${title}</h3>\r\n        <p class=\"film-card__rating\">${rating}</p>\r\n        <p class=\"film-card__info\">\r\n          <span class=\"film-card__year\">${year}</span>\r\n          <span class=\"film-card__duration\">${releaseDate.getFullYear()}</span>\r\n          <span class=\"film-card__genre\">${genre[0]}</span>\r\n        </p>\r\n        <img src=\"${img}\" alt=\"\" class=\"film-card__poster\">\r\n        <p class=\"film-card__description\">${description.length > 139 ? description.slice(1, 139) + `...` : description}</p>\r\n        <a class=\"film-card__comments\">${comments.length} comments</a>\r\n        <form class=\"film-card__controls\">\r\n          <button class=\"film-card__controls-item button film-card__controls-item--add-to-watchlist ${userDetails.isWatchlistActive ? `film-card__controls-item--active` : ``}\">Add to watchlist</button>\r\n          <button class=\"film-card__controls-item button film-card__controls-item--mark-as-watched ${userDetails.isWatchedtActive ? `film-card__controls-item--active` : ``}\">Mark as watched</button>\r\n          <button class=\"film-card__controls-item button film-card__controls-item--favorite ${userDetails.isFavoriteActive ? `film-card__controls-item--active` : ``}\">Mark as favorite</button>\r\n        </form>\r\n      </article>`\r\n  );\r\n};\r\n","\r\nconst filterItem = (filter, isActive) => {\r\n  const {name, count} = filter;\r\n  return (\r\n    `<a href=\"#watchlist\" class=\"main-navigation__item ${isActive ? `main-navigation__item--active` : ``}\">${name} ${count !== 0 ? `<span class=\"main-navigation__item-count\">${count}</span>` : ``}</a>`\r\n  );\r\n};\r\n// создаем шаблон элемента \"Меню (фильтры и статистика)\"\r\n\r\n\r\nexport const createFilterAndStatistics = (filters) => {\r\n  const textData = filters.map((item, index) => {\r\n    return filterItem(item, index === 0);\r\n  }).join(`\\n`);\r\n\r\n  return (\r\n    `<nav class=\"main-navigation\">\r\n        <div class=\"main-navigation__items\">\r\n          ${textData}\r\n        </div>\r\n        <a href=\"#stats\" class=\"main-navigation__additional\">Stats</a>\r\n\r\n      </nav>`\r\n  );\r\n};\r\n\r\n","// создаем шаблон элемента \"Звание пользователя\"\r\nexport const createRankUser = () => {\r\n  return (\r\n    `<section class=\"header__profile profile\">\r\n    <p class=\"profile__rating\">Movie Buff</p>\r\n    <img class=\"profile__avatar\" src=\"images/bitmap@2x.png\" alt=\"Avatar\" width=\"35\" height=\"35\">\r\n  </section>`\r\n  );\r\n};\r\n","export const createShowMoreButton = () => {\r\n  return (\r\n    `<button class=\"films-list__show-more\">Show more</button>`\r\n  );\r\n};\r\n","const sortItem = (name, isActive) => {\r\n  return (\r\n    `<li><a href=\"#\" class=\"sort__button ${isActive ? `sort__button--active` : ``}\">${name}</a></li>\r\n    `\r\n  );\r\n};\r\n\r\nexport const createSorting = (data) => {\r\n  const dataSort = data.map((item, index) => {\r\n    return sortItem(item, index === 0);\r\n  }).join(`\\n`);\r\n\r\n  return (\r\n    `<ul class=\"sort\">\r\n        ${dataSort}\r\n      </ul>`\r\n  );\r\n};\r\n","export const createStatistics = () => {\r\n  return (\r\n    `<section class=\"footer__statistics\">\r\n    <p>130 291 movies inside</p>\r\n  </section>`\r\n  );\r\n};\r\n","export const FILM_ARTICLES = {\r\n  title: [`one`, `two`, `three`, `four`, `five`, `six`],\r\n  img: [`made-for-each-other.png`, `popeye-meets-sinbad.png`, `sagebrush-trail.jpg`, `santa-claus-conquers-the-martians.jpg`, `the-dance-of-life.jpg`, `the-great-flamarion.jpg`, `the-man-with-the-golden-arm.jpg`],\r\n  description: `Lorem ipsum dolor sit amet,  consectetur adipiscing elit. Cras aliquet  varius magna, non porta ligula feugiat\r\n  eget. Fusce tristique felis at fermentum  pharetra. Aliquam id orci ut lectus varius  viverra. Nullam nunc ex, convallis sed\r\n  finibus eget, sollicitudin eget ante.  Phasellus eros mauris, condimentum sed\r\n  nibh vitae, sodales efficitur ipsum. Sed  blandit, eros vel aliquam faucibus, purus  ex euismod diam, eu luctus nunc ante ut  dui. Sed sed nisi sed augue convallis  suscipit in sed felis. Aliquam erat  volutpat. Nunc fermentum tortor ac porta  dapibus. In rutrum ac purus sit amet tempus.`,\r\n  genre: [`comedy`, `fighting`, `horror`, `drama`, `musical`],\r\n  writers: [`Din Kuntz`, `Pehov`, `Joe Abercrombi`, `Patrik Ruffus`, `Erixon`],\r\n  actors: [`Lui De Fines`, `Charli Chaplin`, `Janifer Aniston`, `Big Ban`],\r\n  country: [`Russia`, `USA`, `India`],\r\n\r\n};\r\n\r\nexport const FILM_COMMENTS = {\r\n  arthor: [`Max`, `Illia`, `John Snow`, `Lady Gaga`, `Brad Pitt`, `Ass Hole`],\r\n  comment: [`good Film!`, `Amazing Film!`, `Not good film`, `Boooooooriiiing!!!`, `it's terrible! I have pised my shorts!`, `It's very funny!`, `its very dramatic!`],\r\n  emotion: [`smile`, `sleeping`, `puke`, `angry`],\r\n  date: `2019-05-11T16:12:32.554Z`,\r\n};\r\n\r\nexport const MONTH = [`January`, `February`, `Marth`, `April`, `May`, `June`, `July`, `August`, `September`, `November`, `December`];\r\n","import {FILM_ARTICLES} from \"../const/const\";\r\nimport {FILM_COMMENTS} from \"../const/const\";\r\n\r\nconst generateTitle = () => {\r\n  return FILM_ARTICLES.title[Math.floor(Math.random() * FILM_ARTICLES.title.length)];\r\n};\r\n\r\nconst generateImg = () => {\r\n  return FILM_ARTICLES.img[Math.floor(Math.random() * FILM_ARTICLES.img.length)];\r\n};\r\n\r\n// const arr = FILM_ARTICLES.description.split('.');\r\n// console.log(FILM_ARTICLES.description.split(`.`));\r\n\r\nconst generateDescription = () => {\r\n  const arr = FILM_ARTICLES.description.split(`.`);\r\n  const setArr = new Set();\r\n  for (let i = 0; i < 5; i++) {\r\n    setArr.add(arr[Math.floor(Math.random() * arr.length)]);\r\n  }\r\n  return Array.from(setArr).join(`. `);\r\n};\r\n\r\nconst generateRating = () => {\r\n  return (Math.random() * 10).toFixed(1);\r\n};\r\n\r\nconst generateYear = () => {\r\n  return 1972 + Math.floor(Math.random() * 50);\r\n};\r\n\r\nconst generateGenre = () => {\r\n  let numberGenres = Math.floor(Math.random() * FILM_ARTICLES.genre.length) + 1;\r\n  const genres = [];\r\n  for (let i = 0; i < numberGenres; i++) {\r\n    let addingGenre = FILM_ARTICLES.genre[Math.floor(Math.random() * numberGenres)];\r\n    if (!genres.includes(addingGenre)) {\r\n      genres.push(addingGenre);\r\n    }\r\n  }\r\n  return genres;\r\n};\r\n\r\nconst generateWriters = () => {\r\n  let numberWriters = Math.floor(Math.random() * FILM_ARTICLES.writers.length) + 1;\r\n  const writers = [];\r\n  for (let i = 0; i < numberWriters; i++) {\r\n    let addingWriters = FILM_ARTICLES.writers[Math.floor(Math.random() * numberWriters)];\r\n    if (!writers.includes(addingWriters)) {\r\n      writers.push(addingWriters);\r\n    }\r\n  }\r\n  return writers;\r\n};\r\n\r\nconst generateActors = () => {\r\n  let numberActors = Math.floor(Math.random() * FILM_ARTICLES.actors.length) + 1;\r\n  const actors = [];\r\n  for (let i = 0; i < numberActors; i++) {\r\n    let addingActors = FILM_ARTICLES.actors[Math.floor(Math.random() * numberActors)];\r\n    if (!actors.includes(addingActors)) {\r\n      actors.push(addingActors);\r\n    }\r\n  }\r\n  return actors;\r\n};\r\n\r\nconst filmArticleCommentMock = () => {\r\n  return {\r\n    'id': Math.floor(Math.random() * 500),\r\n    'author': FILM_COMMENTS.arthor[Math.floor(Math.random() * FILM_COMMENTS.arthor.length)],\r\n    \"comment\": FILM_COMMENTS.comment[Math.floor(Math.random() * FILM_COMMENTS.comment.length)],\r\n    'date': `2019-05-11T16:12:32.554Z`,\r\n    \"emotion\": FILM_COMMENTS.emotion[Math.floor(Math.random() * FILM_COMMENTS.emotion.length)],\r\n  };\r\n};\r\n\r\nconst generateComments = () => {\r\n  return new Array(Math.floor(Math.random() * 5) + 1).fill(``).map(() => {\r\n    return filmArticleCommentMock();\r\n  });\r\n};\r\n\r\nconst filmArticleDataMock = () => {\r\n  return {\r\n    'id': Math.floor(Math.random() * 500),\r\n    'title': generateTitle(),\r\n    'rating': `${generateRating()}`,\r\n    'year': generateYear(),\r\n    'releaseDate': `2019-05-11T00:00:00.000Z`,\r\n    'runTime': 135,\r\n    'genre': generateGenre(),\r\n    'img': `./images/posters/${generateImg()}`,\r\n    'description': `${generateDescription()}`,\r\n    'comments': generateComments(),\r\n    \"alternativeTitle\": `alternative_title`,\r\n    \"ageRating\": Math.floor(Math.random() * 17) + 1,\r\n    \"director\": `James Cameron`,\r\n    \"writers\": generateWriters(),\r\n    \"actors\": generateActors(),\r\n    \"country\": FILM_ARTICLES.country[Math.floor(Math.random() * FILM_ARTICLES.country.length)],\r\n    \"userDetails\": {\r\n      'isWatchlistActive': Math.random() > 0.5,\r\n      'isWatchedtActive': Math.random() > 0.5,\r\n      'isFavoriteActive': Math.random() > 0.5,\r\n      'watchingDate': `2019-04-12T16:12:32.554Z`\r\n    }\r\n\r\n  };\r\n};\r\n\r\n\r\nconst generateFilms = (count) => {\r\n  return new Array(count).fill(``).map(() => {\r\n    return filmArticleDataMock();\r\n  });\r\n};\r\n\r\nexport {filmArticleDataMock, generateFilms};\r\n","const filterNames = [`All movies`, `Watchlist`, `History`, `Favorites`];\r\n\r\nconst filtersDataMock = () => {\r\n  return filterNames.map((item, index) => {\r\n    return {\r\n      name: item,\r\n      count: index === 0 ? 0 : Math.floor(Math.random() * 100)\r\n    };\r\n  });\r\n};\r\n\r\nexport {filtersDataMock};\r\n","const sortDataMock = [`Sort by default`, `\r\nSort by date`, `\r\nSort by rating`];\r\n\r\nexport {sortDataMock};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {addElement} from './add-elements';\r\nimport {createRankUser} from './components/rank-user';\r\nimport {createFilterAndStatistics} from './components/filter-and-statistics';\r\nimport {createSorting} from './components/sorting';\r\nimport {createFilmArticle} from './components/film-article';\r\nimport {createShowMoreButton} from './components/show-more-button';\r\nimport {createStatistics} from './components/statistics';\r\nimport {filtersDataMock} from './mock/filter-and-statistics-mok';\r\nimport {sortDataMock} from './mock/sorting-mock';\r\nimport {filmArticleDataMock, generateFilms} from './mock/film-articles-mock';\r\n// import { createUserStats } from './components/user-stats';\r\n// import {createPopup} from './components/popup/popup';\r\n\r\n// console.log(filmArticleDataMock());\r\n// console.log(generateFilms(5));\r\n\r\n// основные элементы для вставки контента\r\nconst rankUserContainer = document.querySelector(`.header`);\r\nconst mainContainer = document.querySelector(`.main`);\r\nconst footerContainer = document.querySelector(`.footer`);\r\n\r\naddElement(rankUserContainer, createRankUser());\r\naddElement(mainContainer, createFilterAndStatistics(filtersDataMock()), `afterbegin`);\r\naddElement(mainContainer, createSorting(sortDataMock));\r\n\r\n// контейнер для секции \"фильмы\"\r\nconst filmsContainer = document.createElement(`section`);\r\nfilmsContainer.className = `films`;\r\nfilmsContainer.innerHTML = `\r\n<section class=\"films-list\">\r\n      <h2 class=\"films-list__title visually-hidden\">All movies. Upcoming</h2>\r\n      <div class=\"films-list__container\">\r\n      </div>`;\r\n\r\nmainContainer.append(filmsContainer);\r\nconst articleFilmsContainer = filmsContainer.querySelector(`.films-list__container`); // добавляем контейнер непосредственно для карточек фильмов\r\n\r\nconst TOTAL_FILMS = 20;\r\nconst SHOWN_FILMS = 5;\r\nconst ADD_FILMS = 5;\r\n\r\nconst films = generateFilms(TOTAL_FILMS);\r\n\r\nfilms.slice(0, SHOWN_FILMS).forEach((item) => {\r\n  addElement(articleFilmsContainer, createFilmArticle(item));\r\n});\r\n\r\n// добавляем кнопку \"показать больше фильмов\"\r\naddElement(articleFilmsContainer, createShowMoreButton(), `afterEnd`);\r\nconst moreButton = mainContainer.querySelector(`.films-list__show-more`);\r\nlet prevFilms = SHOWN_FILMS;\r\n\r\nmoreButton.addEventListener(`click`, () => {\r\n  let currentFilms = prevFilms + ADD_FILMS;\r\n  films.slice(prevFilms, currentFilms).forEach((item) => {\r\n    addElement(articleFilmsContainer, createFilmArticle(item));\r\n  });\r\n  prevFilms = currentFilms;\r\n  if (currentFilms >= TOTAL_FILMS) {\r\n    moreButton.remove();\r\n  }\r\n});\r\n\r\n// добавляем топ-рейтинг фильмы\r\nconst topRatedFilms = document.createElement(`section`);\r\ntopRatedFilms.className = `films-list--extra`;\r\ntopRatedFilms.innerHTML = `<h2 class=\"films-list__title\">Top rated</h2>\r\n<div class=\"films-list__container\"> </div>`;\r\n\r\nfilmsContainer.append(topRatedFilms);\r\nconst topListFilmsArticles = topRatedFilms.querySelector(`.films-list__container`);\r\n\r\nfor (let i = 0; i < 2; i++) {\r\n  addElement(topListFilmsArticles, createFilmArticle(filmArticleDataMock()));\r\n}\r\n\r\n// добавляем рейтинг самых просматриваемых фильмов\r\nconst mostCommendedFilms = document.createElement(`section`);\r\nmostCommendedFilms.className = `films-list--extra`;\r\nmostCommendedFilms.innerHTML = `<h2 class=\"films-list__title\">Most commented</h2>\r\n<div class=\"films-list__container\"> </div>`;\r\n\r\nfilmsContainer.append(mostCommendedFilms);\r\nconst mostCommendedFilmsArticles = mostCommendedFilms.querySelector(`.films-list__container`);\r\n\r\nfor (let i = 0; i < 2; i++) {\r\n  addElement(mostCommendedFilmsArticles, createFilmArticle(filmArticleDataMock()));\r\n}\r\n\r\n// добавление статистики пользователя по необходимости\r\n// addElement(mainContainer, createUserStats());\r\n\r\naddElement(footerContainer, createStatistics());\r\n\r\n// добавление попапа по необходимости\r\n// addElement(footerContainer, createPopup(films[0]), `afterEnd`);\r\n"],"names":[],"sourceRoot":""}